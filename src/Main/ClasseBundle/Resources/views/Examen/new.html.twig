{% extends '::base.html.twig' %}

{% block body -%}
    <h1>Cr√©er un nouvel Examen</h1>

    {{ form_start(form) }}
    {{ form_row(form.name) }}
    {{ form_row(form.debut) }}
    {{ form_row(form.fin) }}
    {{ form_row(form.classe) }}
    {{ form_label(form.savoirs) }}
	<ul class="savoirs" data-prototype="{{ form_widget(form.savoirs.vars.prototype)|e }}"></ul>
	{% do form.savoirs.setRendered %}
    {{ form_end(form) }}
        <ul class="record_actions">
    <li>
        <a href="{{ path('main_user_profil') }}">
            Retour au profil
        </a>
    </li>
</ul>
{% endblock %}

{% block javascripts -%}
{{parent()}}
<script type="text/javascript">
var $collectionHolder;

// setup an "add a tag" link
var $addSavoirLink = $('<a href="#" class="add_savoir_link">Ajouter un Savoir</a>');
var $newLinkLi = $('<li></li>').append($addSavoirLink);

jQuery(document).ready(function() {
    // Get the ul that holds the collection of savoirs
    $collectionHolder = $('ul.savoirs');

    // add a delete link to all of the existing tag form li elements
    $collectionHolder.find('li').each(function() {
	console.log($(this));
        addTagFormDeleteLink($(this));
    });
	
    // add the "add a tag" anchor and li to the savoirs ul
    $collectionHolder.append($newLinkLi);

    // count the current form inputs we have (e.g. 2), use that as the new
    // index when inserting a new item (e.g. 2)
    $collectionHolder.data('index', $collectionHolder.find(':input').length);

    $addSavoirLink.on('click', function(e) {
        // prevent the link from creating a "#" on the URL
        e.preventDefault();
        // add a new tag form (see next code block)
        addTagForm($collectionHolder, $newLinkLi);
		var elem = $(this);
		$.ajax({
		type: "POST",
		url: "{{ path('get_savoirs_from_classe')}}",
		data: "classe="+$('#main_classebundle_examen_classe').val(),
		cache: false,
		success: function(data){
			var $el = elem.parent().prev().find('select');
			$el.empty(); // remove old options
			$.each(data, function(key,value) {
				$el.append(new Option(value,key));
			});
		}});

    });
	
	
});

function addTagForm($collectionHolder, $newLinkLi) {
    // Get the data-prototype explained earlier
    var prototype = $collectionHolder.data('prototype');

    // get the new index
    var index = $collectionHolder.data('index');

    // Replace '__name__' in the prototype's HTML to
    // instead be a number based on how many items we have
    var newForm = prototype.replace(/__name__/g, index);

    // increase the index with one for the next item
    $collectionHolder.data('index', index + 1);

    // Display the form in the page in an li, before the "Add a tag" link li
    var $newFormLi = $('<li></li>').append(newForm);
    $newLinkLi.before($newFormLi);
	
    addTagFormDeleteLink($newFormLi);
	
}

function addTagFormDeleteLink($tagFormLi) {
    var $removeFormA = $('<a href="#">supprimer ce savoir</a>');
    $tagFormLi.append($removeFormA);

    $removeFormA.on('click', function(e) {
        // prevent the link from creating a "#" on the URL
        e.preventDefault();

        // remove the li for the tag form
        $tagFormLi.remove();
    });
}

</script>

{% endblock %}